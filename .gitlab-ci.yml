stages:
  - test
  - build

eslint:
  stage: test
  image: node:5.10.1
  cache:
    paths:
      - node_modules/
  script:
    - npm install eslint@$(node -p 'require("./package.json").devDependencies.eslint')
    - ./node_modules/.bin/eslint --ignore-path .precommitignore .
  tags:
    - docker

build-android:
  stage: build
  image: weikinhuang/ionic-android-build
  script:
    # configure secrets!
    - echo "$APP_ANDROID_BUILD_CONFIG" | tr -d '\r' | base64 -di > build.json
    - echo "$APP_ANDROID_RELEASE_KEY" | tr -d '\r' | base64 -di > keys/android.release.keystore
    - echo "$APP_SHA256SUM_TXT" | tr -d '\r' > SHA256SUM.txt
    - sha256sum -c SHA256SUM.txt
    - rm -f SHA256SUM.txt
    - unset APP_ANDROID_BUILD_CONFIG
    - unset APP_ANDROID_RELEASE_KEY
    - unset APP_SHA256SUM_TXT
    # prepare for build
    - npm install --quiet
    - bower install --allow-root --quiet
    # set build id
    - sed -i 's/android-versionCode="0"/android-versionCode="'$CI_BUILD_ID'"/' config.xml
    # reset plugins
    - gulp dist
    - ionic state reset
    # remove dev plugins
    - ionic plugin rm cordova-plugin-console
    # build android
    - ionic build --release android
  tags:
    - docker
